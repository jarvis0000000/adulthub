name: üó∫Ô∏è Auto Generate & Deploy SEO Files

on:
  schedule:
    - cron: "0 */12 * * *"   # ‚è∞ Every 12 hours
  workflow_dispatch:          # Manual trigger allowed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Checkout Repository
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: üì¶ Install Dependencies
        run: npm ci

      - name: üó∫Ô∏è Generate SEO Files (sitemap, robots, meta)
        env:
          SHEET_KEY: ${{ secrets.SHEET_KEY }}
        run: |
          echo "‚öôÔ∏è Generating SEO files..."
          node generate-sitemap.js

      - name: üíæ Commit SEO File Updates
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -f sitemap.xml sitemap.xml.gz robots.txt seo-meta.json _headers indexnow-key.txt || true
          if git diff --cached --quiet; then
            echo "‚úÖ No changes detected."
          else
            TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)
            git commit -m "ü§ñ Auto SEO update: ${TIMESTAMP}"
            git push
          fi

      - name: üöÄ Trigger Cloudflare Pages Deploy
        if: success()
        env:
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_PROJECT_NAME: ${{ secrets.CF_PROJECT_NAME }}
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: |
          echo "üöÄ Triggering Cloudflare Pages Deployment..."
          curl -X POST "https://api.cloudflare.com/client/v4/accounts/${CF_ACCOUNT_ID}/pages/projects/${CF_PROJECT_NAME}/deployments" \
          -H "Authorization: Bearer ${CF_API_TOKEN}" \
          -H "Content-Type: application/json" \
          --fail \
          --silent \
          --show-error \
          --data '{"branch":"main"}'

      - name: üßπ Purge Cloudflare Cache (Sitemap + Robots)
        if: success()
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
        run: |
          echo "üßπ Purging Cloudflare cache for sitemap and robots.txt..."
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${CF_ZONE_ID}/purge_cache" \
          -H "Authorization: Bearer ${CF_API_TOKEN}" \
          -H "Content-Type: application/json" \
          --data '{"files":["https://dareloom.fun/sitemap.xml","https://dareloom.fun/robots.txt"]}'
