steps:
  - name: üßæ Checkout Repository
    uses: actions/checkout@v4

  - name: ‚öôÔ∏è Setup Node.js
    uses: actions/setup-node@v4
    with:
      node-version: 20

  - name: üì¶ Install Dependencies
    run: npm ci

  # -------------------------------
  # Generate SEO files (main sitemap)
  # -------------------------------
  - name: üó∫Ô∏è Generate Global SEO Files
    env:
      # Secret matched to your GitHub Secret: GOOGLE_SHEET_API_KEY
      SHEET_KEY: ${{ secrets.GOOGLE_SHEET_API_KEY }}
    run: |
      echo "‚öôÔ∏è Generating main SEO files..."
      node generate-sitemap.js

  # -------------------------------
  # Generate Actress Pages + Sitemap
  # -------------------------------
  - name: üé¨ Generate Actress Pages & Sitemap
    run: |
      echo "üé• Creating actress pages and sitemaps..."
      node generate-actresses.js

  # -------------------------------
  # Commit SEO File Updates
  # -------------------------------
  - name: üíæ Commit SEO File Updates
    run: |
      git config user.name "github-actions[bot]"
      git config user.email "github-actions[bot]@users.noreply.github.com"

      # Force add all generated SEO + actress files
      git add -f sitemap.xml sitemap.xml.gz robots.txt seo-meta.json \
        sitemap-actors.xml seo-meta-actors.json sitemap-index.xml actors/ _headers indexnow-key.txt || true

      if git diff --cached --quiet; then
        echo "‚úÖ No changes detected."
      else
        TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)
        git commit -m "ü§ñ Auto SEO update: ${TIMESTAMP}"
        git push
      fi

  # -------------------------------
  # Trigger Cloudflare Pages Deploy
  # -------------------------------
  - name: üöÄ Trigger Cloudflare Pages Deploy
    if: success()
    env:
      CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
      CF_PROJECT_NAME: ${{ secrets.CF_PROJECT_NAME }}
      # Secret matched to your GitHub Secret: CLOUDFLARE_API_TOKEN
      CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
    run: |
      echo "üöÄ Triggering Cloudflare Pages Deployment..."
      curl -X POST "https://api.cloudflare.com/client/v4/accounts/${CF_ACCOUNT_ID}/pages/projects/${CF_PROJECT_NAME}/deployments" \
      -H "Authorization: Bearer ${CF_API_TOKEN}" \
      -H "Content-Type: application/json" \
      --fail \
      --silent \
      --show-error \
      --data '{"branch":"main"}'

  # -------------------------------
  # Purge Cloudflare Cache
  # -------------------------------
  - name: üßπ Purge Cloudflare Cache (Sitemap + Robots)
    if: success()
    env:
      # Secret matched to your GitHub Secret: CLOUDFLARE_API_TOKEN
      CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      # Secret matched to your GitHub Secret: CLOUDFLARE_ZONE_ID
      CF_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
    run: |
      echo "üßπ Purging Cloudflare cache for sitemap and robots.txt..."
      curl -X POST "https://api.cloudflare.com/client/v4/zones/${CF_ZONE_ID}/purge_cache" \
      -H "Authorization: Bearer ${CF_API_TOKEN}" \
      -H "Content-Type: application/json" \
      --data '{"files":["https://dareloom.fun/sitemap.xml","https://dareloom.fun/robots.txt","https://dareloom.fun/sitemap-actors.xml"]}'
