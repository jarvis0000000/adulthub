Name: ü§ñ Auto SEO + IndexNow + Cloudflare Deploy

on:
  schedule:
    - cron: "0 */12 * * *"    # ‚è∞ Every 12 hours
  workflow_dispatch:           # Manual trigger allowed

jobs:
  auto-seo:
    runs-on: ubuntu-latest
steps:
  # ----------------------------------------
  # 1Ô∏è‚É£ Checkout repo
  # ----------------------------------------
  - name: üßæ Checkout Repository
    uses: actions/checkout@v4

  # ----------------------------------------
  # 2Ô∏è‚É£ Setup Node.js
  # ----------------------------------------
  - name: ‚öôÔ∏è Setup Node.js
    uses: actions/setup-node@v4
    with:
      node-version: 20

  # ----------------------------------------
  # 3Ô∏è‚É£ Install dependencies
  # ----------------------------------------
  - name: üì¶ Install Dependencies
    run: npm ci

  # ----------------------------------------
  # 4Ô∏è‚É£ Generate global sitemap + meta
  # ----------------------------------------
  - name: üåê Generate Main SEO Files
    env:
      # Uses secret GOOGLE_SHEET_API_KEY from GitHub
      SHEET_KEY: ${{ secrets.GOOGLE_SHEET_API_KEY }} 
    run: |
      echo "üó∫Ô∏è Generating main sitemap..."
      node generate-sitemap.js

  # ----------------------------------------
  # 5Ô∏è‚É£ Generate actress sitemap + meta
  # ----------------------------------------
  - name: üé¨ Generate Actress Pages + Sitemap
    run: |
      echo "üé• Creating actress pages and SEO data..."
      node generate-actresses.js

  # ----------------------------------------
  # 6Ô∏è‚É£ Commit and push changes
  # ----------------------------------------
  - name: üíæ Commit SEO Updates
    run: |
      git config user.name "github-actions[bot]"
      git config user.email "github-actions[bot]@users.noreply.github.com"

      # Force add all generated files
      git add -f sitemap.xml sitemap.xml.gz robots.txt seo-meta.json \
        sitemap-actors.xml seo-meta-actors.json sitemap-index.xml \
        actors/ _headers indexnow-key.txt || true

      if git diff --cached --quiet; then
        echo "‚úÖ No changes detected."
      else
        TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)
        git commit -m "ü§ñ Auto SEO + IndexNow update: ${TIMESTAMP}"
        git push
      fi

  # ----------------------------------------
  # 7Ô∏è‚É£ Trigger Cloudflare deploy
  # ----------------------------------------
  - name: üöÄ Deploy to Cloudflare Pages
    if: success() && steps.commit.outputs.files_committed == 'true'
    id: commit
    env:
      CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
      CF_PROJECT_NAME: ${{ secrets.CF_PROJECT_NAME }}
      # The token is available as an environment variable named CF_API_TOKEN
      CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }} 
    run: |
      echo "üöÄ Deploying to Cloudflare..."
      # CF_API_TOKEN is used here
      curl -X POST "https://api.cloudflare.com/client/v4/accounts/${CF_ACCOUNT_ID}/pages/projects/${CF_PROJECT_NAME}/deployments" \
      -H "Authorization: Bearer ${CF_API_TOKEN}" \
      -H "Content-Type: application/json" \
      --data '{"branch":"main"}' \
      --fail --silent --show-error

  # ----------------------------------------
  # 8Ô∏è‚É£ Purge Cloudflare cache
  # ----------------------------------------
  - name: üßπ Purge Cloudflare Cache
    if: success() && steps.commit.outputs.files_committed == 'true'
    env:
      # The token is available as an environment variable named CF_API_TOKEN
      CF_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      # The Zone ID is available as an environment variable named CF_ZONE_ID
      CF_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
    run: |
      echo "üßπ Clearing Cloudflare cache..."
      # CF_API_TOKEN and CF_ZONE_ID are used here
      curl -X POST "https://api.cloudflare.com/client/v4/zones/${CF_ZONE_ID}/purge_cache" \
      -H "Authorization: Bearer ${CF_API_TOKEN}" \
      -H "Content-Type: application/json" \
      --data '{"files":["https://dareloom.fun/sitemap.xml","https://dareloom.fun/sitemap-actors.xml","https://dareloom.fun/robots.txt"]}'

  # ----------------------------------------
  # 9Ô∏è‚É£ Ping IndexNow + Google
  # ----------------------------------------
  - name: üîî Notify Search Engines (IndexNow + Google)
    if: success() && steps.commit.outputs.files_committed == 'true'
    run: |
      INDEXNOW_KEY=$(cat indexnow-key.txt | tr -d '\n')
      DOMAIN="https://dareloom.fun"
      echo "üîî Pinging IndexNow and Google for sitemap refresh..."

      curl -s -X POST "https://api.indexnow.org/indexnow" \
        -H "Content-Type: application/json" \
        -d "{\"host\": \"dareloom.fun\", \"key\": \"${INDEXNOW_KEY}\", \"urlList\": [\"${DOMAIN}/sitemap.xml\", \"${DOMAIN}/sitemap-actors.xml\"]}"

      curl -s "https://www.google.com/ping?sitemap=${DOMAIN}/sitemap.xml"
      curl -s "https://www.google.com/ping?sitemap=${DOMAIN}/sitemap-actors.xml"

      echo "‚úÖ IndexNow + Google notified successfully!"
    
