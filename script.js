// Dareloom Hub - final script v2
const API_KEY = "AIzaSyA2OVy5Y8UGDrhCWLQeEMcBk8DtjXuFowc";
const SHEET_ID = "1A2I6jODnR99Hwy9ZJXPkGDtAFKfpYwrm3taCWZWoZ7o";
const AD_SCRIPT = "//pl27626803.revenuecpmgate.com/24/e4/33/24e43300238cf9b86a05c918e6b00561.js";
const PER_PAGE = 5;
const API_URL = "https://sheets.googleapis.com/v4/spreadsheets/1A2I6jODnR99Hwy9ZJXPkGDtAFKfpYwrm3taCWZWoZ7o/values/Sheet1?key=AIzaSyA2OVy5Y8UGDrhCWLQeEMcBk8DtjXuFowc";
let items = [];
let current = null;
let currentPage = 1;

async function fetchSheet(){ try{ const res = await fetch(API_URL); if(!res.ok) throw new Error('sheet fetch ' + res.status); const data = await res.json(); return data.values || []; }catch(e){ console.error('fetchSheet error', e); return []; } }

function parseRows(values){ if(!values || values.length < 2) return []; const headers = values[0].map(h=>h.trim()); const rows = values.slice(1); const arr = rows.map(r=>{ const obj={}; headers.forEach((h,i)=> obj[h]=(r[i]||'').toString()); return obj; }).filter(x=> (x.Trailer && x.Trailer.trim()) || (x.Watch && x.Watch.trim())); return arr.map((it,i)=>({ id: it.Title ? (it.Title + '|' + (it.Watch||'')).slice(0,140) : String(i), title: it.Title || it.title || 'Untitled', trailer: it.Trailer || it.trailer || '', watch: it.Watch || it.watch || '', poster: it.Poster || it.poster || '', date: it.Date || it.date || '' })); }

function getYouTubeID(url){ if(!url) return null; const m = url.match(/(?:v=|youtu\.be\/|shorts\/|embed\/)([0-9A-Za-z_-]{11})/); return m ? m[1] : null; }
function makeThumbnail(item){ if(item.poster) return item.poster; const yid = getYouTubeID(item.trailer); if(yid) return 'https://img.youtube.com/vi/' + yid + '/hqdefault.jpg'; return 'https://placehold.co/600x400?text=No+Thumbnail'; }
function toEmbedUrl(url){ if(!url) return ''; url = url.trim(); const yt = url.match(/(?:v=|youtu\.be\/|shorts\/|embed\/)([0-9A-Za-z_-]{11})/); if(yt && yt[1]) return 'https://www.youtube.com/embed/' + yt[1] + '?autoplay=1&rel=0'; if(url.includes('youtube.com/embed')) return url; const vm = url.match(/vimeo\.com\/(\d+)/); if(vm && vm[1]) return 'https://player.vimeo.com/video/' + vm[1] + '?autoplay=1&muted=1'; const ph1 = url.match(/pornhub\.com\/view_video\.php\?viewkey=([A-Za-z0-9_-]+)/); const ph2 = url.match(/pornhub\.com\/embed\/([A-Za-z0-9_-]+)/); if(ph1 && ph1[1]) return 'https://www.pornhub.com/embed/' + ph1[1]; if(ph2 && ph2[1]) return 'https://www.pornhub.com/embed/' + ph2[1]; const gd = url.match(/drive\.google\.com\/file\/d\/([A-Za-z0-9_-]+)/); if(gd && gd[1]) return 'https://drive.google.com/file/d/' + gd[1] + '/preview'; if(url.match(/\.mp4($|\?)/i)) return url; return url; }

function escapeHtml(s){ return (s||'').toString().replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;'); }

function renderRandom(){ const grid = document.getElementById('randomGrid'); if(!grid) return; grid.innerHTML=''; const pool = items.slice(); const picks = []; while(picks.length < 4 && pool.length){ const p = pool.splice(Math.floor(Math.random()*pool.length),1)[0]; picks.push(p); } picks.forEach(it=>{ const card = document.createElement('div'); card.className='card'; const thumbUrl = makeThumbnail(it); const thumb = '<img class="thumb" src="' + escapeHtml(thumbUrl) + '" loading="lazy">'; card.innerHTML = thumb + '<div class="meta"><h4>' + escapeHtml(it.title) + '</h4></div>'; card.addEventListener('click', ()=> showItem(it)); grid.appendChild(card); }); }

function renderLatest(){ const list = document.getElementById('latestList'); if(!list) return; list.innerHTML=''; const start = (currentPage-1)*PER_PAGE; const slice = items.slice(start, start+PER_PAGE); slice.forEach(it=>{ const div = document.createElement('div'); div.className='latest-item'; const thumbUrl = makeThumbnail(it); const thumb = '<img class="latest-thumb" src="' + escapeHtml(thumbUrl) + '" loading="lazy">'; div.innerHTML = thumb + '<div class="latest-info"><div style="font-weight:700">' + escapeHtml(it.title) + '</div><div style="color:var(--muted);font-size:13px;margin-top:6px">' + escapeHtml(it.date||'') + '</div><div class="latest-controls"><button class="btn" onclick="showItemById(\'' + escapeHtml(it.id) + '\')">Preview</button> <button class="watch-btn" onclick="openWatchById(\'' + escapeHtml(it.id) + '\')">Watch</button></div></div>'; list.appendChild(div); }); renderPager(); }

function renderPager(){ const pager = document.getElementById('pager'); if(!pager) return; pager.innerHTML=''; const pages = Math.max(1, Math.ceil(items.length / PER_PAGE)); for(let i=1;i<=pages;i++){ const b = document.createElement('button'); b.className='page-btn'; b.textContent = i; if(i === currentPage) b.style.opacity = '0.7'; b.addEventListener('click', ()=>{ currentPage = i; renderLatest(); window.scrollTo({top:300,behavior:'smooth'}); }); pager.appendChild(b); } }

function showItemById(id){ const it = items.find(x=>x.id===id); if(it) showItem(it); } function openWatchById(id){ const it = items.find(x=>x.id===id); if(it) openWatchWithAd(it); }

function showItem(it){ current = it; const embed = toEmbedUrl(it.trailer); const playerWrap = document.getElementById('playerWrap'); if(!playerWrap) return; playerWrap.innerHTML = ''; if(!embed){ playerWrap.innerHTML = '<div style="padding:20px;color:var(--muted)">Trailer not available</div>'; } else if(embed.match(/\.mp4($|\?)/i)){ const v = document.createElement('video'); v.controls=true; v.autoplay=true; v.muted=true; v.playsInline=true; v.src = embed; playerWrap.appendChild(v); } else { const iframe = document.createElement('iframe'); iframe.src = embed; iframe.allow = 'autoplay; encrypted-media; picture-in-picture'; iframe.allowFullscreen = true; playerWrap.appendChild(iframe); } document.getElementById('nowTitle').textContent = it.title || ''; const headerAd = document.getElementById('headerAd'); if(headerAd) headerAd.textContent = 'Ad space â€” header'; renderRandom(); }

function showRandomPick(){ if(items.length===0) return; const pick = items[Math.floor(Math.random()*items.length)]; showItem(pick); renderRandom(); }

function openWatchWithAd(it){ if(!it) return; const target = it.watch || '#'; const s = document.createElement('script'); s.type='text/javascript'; s.src = "//pl27626803.revenuecpmgate.com/24/e4/33/24e43300238cf9b86a05c918e6b00561.js"; s.async = true; document.body.appendChild(s); const watchAd = document.getElementById('watchAd'); if(watchAd) watchAd.textContent = 'Loading ad...'; setTimeout(()=>{ try{ window.open(target, '_blank'); }catch(e){ window.open(target, '_blank'); } }, 900); }

document.getElementById && document.getElementById('shuffleBtn').addEventListener('click', showRandomPick); document.getElementById && document.getElementById('watchNowTop').addEventListener('click', ()=> openWatchWithAd(current));

async function loadAll(){ const values = await fetch(API_URL).then(r=>r.json().catch(()=>null)).catch(()=>null); let parsed = parseRows(values && values.values ? values.values : []); const haveDates = parsed.some(i=>i.date && i.date.trim()); if(haveDates){ parsed.sort((a,b)=> (new Date(b.date||0) - new Date(a.date||0))); } else { parsed = parsed.reverse(); } items = parsed; document.getElementById('count').textContent = items.length + ' items'; renderRandom(); renderLatest(); showRandomPick(); } setInterval(loadAll,45000); loadAll();