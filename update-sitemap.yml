name: üó∫Ô∏è Update Sitemap & Trigger Cloudflare Deployment

on:
  schedule:
    - cron: '0 * * * *' # every hour
  workflow_dispatch:

jobs:
  build-sitemap:
    runs-on: ubuntu-latest
    steps:
      - name: üßæ Checkout Repository
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: üì¶ Install Dependencies
        run: npm ci

      - name: üó∫Ô∏è Generate Sitemap
        env:
          SHEET_KEY: ${{ secrets.GOOGLE_SHEET_API_KEY }}
        run: npm run generate

      - name: üíæ Commit & Push Sitemap Updates
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add -f public/sitemap.xml public/_headers public/robots.txt || true
          TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          git commit -m "Auto-update sitemap: ${TIMESTAMP}" || echo "No changes"
          git push origin main || echo "No push needed"

      - name: üöÄ Trigger Cloudflare Pages Deployment
        env:
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CF_ACCOUNT_ID: "1de9700c63c35247d84a4caaf3700f6b"
          CF_PAGES_PROJECT: "Adulthub"
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/accounts/${CF_ACCOUNT_ID}/pages/projects/${CF_PAGES_PROJECT}/deployments" \
          -H "Authorization: Bearer ${CLOUDFLARE_TOKEN}" \
          -H "Content-Type: application/json" \
          --fail \
          --silent \
          --show-error \
          --data '{"branch":"main"}'

      - name: üßπ Purge Cloudflare Cache (Optional)
        if: env.CLOUDFLARE_ZONE_ID != ''
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        run: |
          echo "üßπ Purging Cloudflare cache for sitemap.xml..."
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${CLOUDFLARE_ZONE_ID}/purge_cache" \
          -H "Authorization: Bearer ${CLOUDFLARE_API_TOKEN}" \
          -H "Content-Type: application/json" \
          --fail \
          --silent \
          --show-error \
          --data '{"files":["https://dareloom.fun/sitemap.xml","https://dareloom.fun/robots.txt"]}'
